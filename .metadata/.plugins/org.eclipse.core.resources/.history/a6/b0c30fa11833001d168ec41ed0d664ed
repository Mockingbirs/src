package com.springproj.biz.board.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.springproj.biz.board.BoardVO;
import com.springproj.biz.common.JDBCUtil;

@Repository("boardDAO")
public class BoardDAO { // DAO (Data Access Object)

	// CRUD (Create Read Update Delete) 기능의 메서드 구현
	private final String BOARD_INSERT = "INSERT into board(seq, title, writer, content) values("
			+ "(select nvl(max(seq),0)+1 from board),?,?,?)";

	private final String BOARD_UPDATE = "UPDATE board set title= ?, content = ? WHERE seq = ?";

	private final String BOARD_DELETE = "DELETE FROM board  WHERE seq = ?";

	private final String BOARD_GET = "SELECT * FROM board  WHERE seq = ?";

	private final String BOARD_GETLIST = "SELECT * FROM board  ORDER BY seq ASC";

	Connection conn;
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	


	// 글 등록(insert문)
	public void insertBoard(BoardVO vo) {
		
		jdbcTemplate.update(BOARD_INSERT, vo.getTitle(), vo.getWriter(), vo.getContent());
		
	}

	// 목록보기(select문)
	public BoardVO getBoard(int seq) {

		
		
		return null;
	}

	
	
	
	
	
	
	
	public void getBoardList() {

		//log.printLog(" = getBoardList =");

		PreparedStatement pstmt = null;
		ResultSet rs = null;

		conn = JDBCUtil.getConnection();

		// 2. jdbc를 이용해서 sql 처리.
		try {
			pstmt = conn.prepareStatement(BOARD_GETLIST);

			int result = pstmt.executeUpdate();
			rs = pstmt.executeQuery();

			while (rs.next()) {

				System.out.println("seq = " + rs.getInt(1) + ", title = " + rs.getString(2) + ", writer = "
						+ rs.getString(3) + ", content = " + rs.getString(4) + ", regdate = " + rs.getDate(5)
						+ ", cnt = " + rs.getInt(6));

			}

			if (result >= 1) {
				System.out.println("===> 데이터 정보 불러오기 성공");
			} else {
				System.out.println("===> 데이터 정보 불러오기 실패");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {

			JDBCUtil.close(pstmt, conn, rs);
		}

	}

	// 글 수정(update문)
	public void updateBoard(BoardVO vo) {

		jdbcTemplate.update(BOARD_UPDATE, vo.getTitle(), vo.getContent(), vo.getSeq());
		
	}

	// 글 삭제(delete문)
	public void deleteBoard(int seq) {
		
		jdbcTemplate.update(BOARD_DELETE, seq);
		
	}

}
